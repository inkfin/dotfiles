# -*- zsh -*-
# vi: ft=zsh

# ======================================
#  dev.zsh
# ======================================
#   developement related commands
# ======================================


# ==== Environment variables ====
#
#   *hint:
#     $PATH:                executable paths
#   (*Linux)
#     $LD_LIBRARY_PATH:     dynamic library paths
#   (*MacOS)
#     $DYLD_LIBRARY_PATH:   dynamic library paths
#


## ---- dylib ----
{{ if eq .chezmoi.os "linux" -}}

prepend_to_path LD_LIBRARY_PATH   "$HOME/.local/lib:/usr/local/lib/"

{{- else if eq .chezmoi.os "darwin" -}}

prepend_to_path DYLD_LIBRARY_PATH "$HOME/.local/lib:/usr/local/lib/"

{{- end }}

## ---- vcpkg ----
export VCPKG_ROOT="$HOME/vcpkg"
prepend_to_path PATH "$VCPKG_ROOT"

## ---- rustup ----
prepend_to_path PATH "${HOMEBREW_PREFIX}/opt/rustup/bin/"

## ---- cargo ----
export CARGO_HOME="$HOME/.cargo"
prepend_to_path PATH "$CARGO_HOME/bin/"

## ---- cuda ----
{{ if eq .chezmoi.os "linux" -}}

export CUDA_12_6_HOME="/usr/local/cuda-12.6"
export CUDA_12_8_HOME="/usr/local/cuda-12.8"
export CUDA_HOME="$CUDA_12_6_HOME"

prepend_to_path PATH "$CUDA_HOME/bin"
prepend_to_path LD_LIBRARY_PATH "$CUDA_HOME/lib64"
prepend_to_path CMAKE_PREFIX_PATH "$CUDA_HOME"

{{- end }}

## ---- nvm ----
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

## ---- llvm ----
{{ if eq .chezmoi.os "darwin" -}}

append_to_path PATH     "${HOMEBREW_PREFIX}/opt/llvm/bin"
append_to_flag LDFLAGS  "-L${HOMEBREW_PREFIX}/opt/llvm/lib/c++ -Wl,-rpath,${HOMEBREW_PREFIX}/opt/llvm/lib/c++ -L${HOMEBREW_PREFIX}/opt/llvm/lib"
append_to_flag CPPFLAGS "-I${HOMEBREW_PREFIX}/opt/llvm/include"

{{- end }}

## ---- CMake ----
append_to_path CMAKE_INCLUDE_PATH "${HOMEBREW_PREFIX}/include"
append_to_path CMAKE_LIBRARY_PATH "${HOMEBREW_PREFIX}/lib"

## ---- DOCKER ----
{{ if eq .chezmoi.os "darwin" -}}

export DOCKER_PATH="/Applications/Docker.app/Contents/Resources/bin"
append_to_path PATH "$DOCKER_PATH"

{{- end }}

## ---- Vulkan ----
{{ if eq .chezmoi.os "darwin" -}}

if [ -f "/usr/local/VulkanSDK/current/setup-env.sh" ]; then
    source "/usr/local/VulkanSDK/current/setup-env.sh"
fi

{{- end }}

## ---- JAVA ----
{{ if eq .chezmoi.os "darwin" -}}

export JAVA_20_HOME="${HOMEBREW_PREFIX}/opt/openjdk@20/libexec/openjdk.jdk/Contents/Home"
export JAVA_11_HOME="${HOMEBREW_PREFIX}/opt/openjdk@11/libexec/openjdk.jdk/Contents/Home"
export JAVA_8_HOME="${HOMEBREW_PREFIX}/opt/openjdk@8/libexec/openjdk.jdk/Contents/Home"

export JAVA_HOME=$JAVA_20_HOME
append_to_flag CPPFLAGS "-I$JAVA_HOME/include"
append_to_path PATH "$JAVA_HOME/bin"

{{- end }}

## ---- Maven -----
{{ if eq .chezmoi.os "darwin" -}}

export M2_HOME="${HOMEBREW_PREFIX}/opt/maven/libexec"
append_to_path PATH "$M2_HOME/bin"

{{- end }}

## ---- Ruby ----
{{ if eq .chezmoi.os "darwin" -}}

append_to_path PATH     "${HOMEBREW_PREFIX}/opt/ruby/bin"
append_to_path PATH     "${HOMEBREW_PREFIX}/lib/ruby/gems/3.1.0/bin"
append_to_flag LDFLAGS  "-L${HOMEBREW_PREFIX}/opt/ruby/lib"
append_to_flag CPPFLAGS "-I${HOMEBREW_PREFIX}/opt/ruby/include"
append_to_path PKG_CONFIG_PATH "${HOMEBREW_PREFIX}/opt/ruby/lib/pkgconfig"

{{- end }}

## ---- Dotnet ----
{{ if eq .chezmoi.os "darwin" -}}

export DOTNET6_ROOT="${HOMEBREW_PREFIX}/opt/dotnet@6/libexec"
export DOTNET8_ROOT="${HOMEBREW_PREFIX}/opt/dotnet@8/libexec"
export DOTNET_ROOT="${HOMEBREW_PREFIX}/opt/dotnet/libexec"
append_to_path PATH "$DOTNET_ROOT"
append_to_path PATH "$DOTNET_ROOT/tools"

{{- end }}


# ==== Utility aliases ====

## ---- CMake ----
alias cmc="cmake -S . -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -B"
alias cmcv="cmake -S . -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_TOOLCHAIN_FILE=$VCPKG_ROOT/scripts/buildsystems/vcpkg.cmake -B"
alias cmb="cmake --build "

## ---- Redis ----
{{ if eq .chezmoi.os "darwin" -}}

# To restart redis after an upgrade:
alias restartredis='brew services restart redis'
# Or, if you don't want/need a background service you can just run:
alias stopredis='${HOMEBREW_PREFIX}/opt/redis/bin/redis-server ${HOMEBREW_PREFIX}/etc/redis.conf'

{{- end }}


# ==== Initialization ====

## ---- vcpkg ----
if [ -f $VCPKG_ROOT/scripts/vcpkg_completion.zsh ]; then
    source $VCPKG_ROOT/scripts/vcpkg_completion.zsh
fi



